---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import { Pokemon } from "src/utils/data-read";
import { capitalizeSnakeCase } from "src/utils/string";

export function getStaticPaths({ paginate }) {
  // Generate pages from our array of astronauts, with 2 to a page
  return paginate(
    Pokemon.map(({ id, identifier }) => ({
      id,
      identifier,
    })),
    { pageSize: 72 }
  );
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props;
const headings = [{ depth: 2, slug: "list-of-pokemons", text: "List of Pokemons" }];
---

<!--Display the current page number. Astro.params.page can also be used!-->
<StarlightPage frontmatter={{ title: "Pokemons" }} headings={headings}>
  <h2 id={headings[0].slug}>{headings[0].text}</h2>
  <div class="pokemon-grid">
    {
      page.data.map(({ id, identifier }) => {
        const pokemonName = capitalizeSnakeCase(identifier!);
        return (
          <a href={`/pokemons/pokemon/${id}`}>
            <h6>{pokemonName}</h6>
            <img
              src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}
              alt={pokemonName}
            />
          </a>
        );
      })
    }
  </div>
  {page.url.prev ? <a href={page.url.prev}>Previous</a> : null}
  {page.url.next ? <a href={page.url.next}>Next</a> : null}
</StarlightPage>
<style>
  .pokemon-grid {
    --n: 6; /* The maximum number of columns */
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(max(96px, 100% / var(--n)), 1fr));
  }
</style>
